<aside class="filters bg-light p-3 rounded" id="filterSection" style="display: none; position: relative; z-index: 1000;">
  <%= form_with url: gyms_path, method: :get, local: true do %>

    <h6>Lotação Minima</h6>
    <div class="mb-3">
      <%= range_field_tag :max_lotacao, params[:max_lotacao] || 100, in: 0..100, step: 1, class: "form-range", id: "max_lotacao_slider" %>
      <p class="small">até <span id="max_lotacao_value"><%= params[:max_lotacao] || 100 %></span>%</p>
    </div>

    <h6>Comodidades</h6>
    <div class="comodies mb-3 d-flex flex-wrap gap-2">
      <% ["Estacionamento","Piscina", "Ar-condicionado", "Armarios", "Sauna", "Lanchonete", "Wi-fi", "Chuveiro", "Bicicletario"].each do |amenity| %>
        <%= check_box_tag "amenities[]", amenity, params[:amenities]&.include?(amenity), id: "amenities_#{amenity}", class: "d-none amenity-checkbox" %>
        <%= label_tag "amenities_#{amenity}", amenity, class: "comodies btn btn-outline-success amenity-label" %>
      <% end %>
    </div>

    <div class="d-flex justify-content-between">
      <%= submit_tag "Filtrar", class: "btn btn-success" %>
      <%= link_to "Limpar", gyms_path, class: "btn btn-outline-secondary" %>
    </div>
  <% end %>
</aside>

<!-- Botão para alternar a visibilidade do filtro -->
<%# <button id="toggleFilterBtn" class="btn btn-primary mt-3 mb-3">Filtros</button> %>

<script>
  // // Adicionando JS para Atualização Dinâmica
  // document.addEventListener("DOMContentLoaded", () => {
  //   const maxLotacaoSlider = document.querySelector("#max_lotacao_slider");
  //   const maxLotacaoValue = document.querySelector("#max_lotacao_value");

  //   if (maxLotacaoSlider && maxLotacaoValue) {
  //     maxLotacaoSlider.addEventListener("input", () => {
  //       maxLotacaoValue.textContent = maxLotacaoSlider.value;
  //     });
  //   }

  //   const fluxos = <%= raw @fluxos.to_json %>;
  //   const capacities = <%= raw @gyms.map { |gym| { id: gym.id, capacity: gym.capacity } }.to_json %>;
  //   console.log("Fluxos:", fluxos);
  //   console.log("Capacities:", capacities);

  //   function updateFluxos() {
  //     capacities.forEach(gym => {
  //       const fluxoElement = document.getElementById(`fluxo-${gym.id}`);
  //       if (fluxoElement) {
  //         let newFluxo = Math.floor(Math.random() * gym.capacity); // Gera um novo valor aleatório
  //         fluxos[gym.id] = newFluxo; // Atualiza o valor no objeto fluxos
  //         fluxoElement.textContent = newFluxo; // Atualiza o valor no DOM
  //       }
  //     });
  //   }

  //   // Atualiza os valores de fluxo a cada 10 segundos
  //   setInterval(updateFluxos, 10000);
  // });

  // JavaScript para mostrar/ocultar os filtros ao clicar no botão
  document.getElementById('toggleFilterBtn').addEventListener('click', function() {
    var filterSection = document.getElementById('filterSection');
    if (filterSection.style.display === 'none' || filterSection.style.display === '') {
      filterSection.style.display = 'contents';
      this.innerText = 'Filtros';
    } else {
      filterSection.style.display = 'none';
      this.innerText = 'Filtros';
    }
  });

  // Adiciona a classe 'btn-success' ao label quando o checkbox é marcado
  document.querySelectorAll('.amenity-checkbox').forEach(function(checkbox) {
    checkbox.addEventListener('change', function() {
      var label = document.querySelector(`label[for='${checkbox.id}']`);
      if (checkbox.checked) {
        label.classList.add('btn-success');
        label.classList.remove('btn-outline-success');
      } else {
        label.classList.remove('btn-success');
        label.classList.add('btn-outline-success');
      }
    });
  });
</script>
